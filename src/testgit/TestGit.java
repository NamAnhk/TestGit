/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package testgit;

/**
 *
 * @author ADMIN
 */
public class TestGit {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        System.out.println("Skibidi");
    }
    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MayTinh;
import service.QLMayTinh;

/**
 *
 * @author ADMIN
 */
public class MayTinhView extends javax.swing.JFrame {

    QLMayTinh ql = new QLMayTinh();
    ArrayList<MayTinh> list = ql.getList();
ArrayList<Integer> listadd = ql.getListadd();
    void writeFile() {
        String path = "output.txt";
        ArrayList<MayTinh> list = ql.getList();
        try {
            FileWriter write = new FileWriter(path);
            BufferedWriter buffwrite = new BufferedWriter(write);
            for (MayTinh mayTinh : list) {
                buffwrite.write(mayTinh.toString());
                buffwrite.newLine();
            }
            buffwrite.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    void load(ArrayList<MayTinh> list) {
        DefaultTableModel model = (DefaultTableModel) tblMT.getModel();
        model.setRowCount(0);
        for (MayTinh mayTinh : list) {
            model.addRow(new Object[]{
                mayTinh.getMa(), mayTinh.getTen(), mayTinh.getHang(), mayTinh.getTrangthai(), mayTinh.getGiaban(), mayTinh.getNamSX()
            });
        }
    }

    /**
     * Creates new form MayTinhView
     */
    public MayTinhView() {
        initComponents();
        ql.generateList();
        load(list);
        MayTinh mt = ql.getList().get(0);
        txtMa.setText(Integer.toString(mt.getMa()));
        txtTen.setText(mt.getTen());
        txtHang.setText(mt.getHang());
        txtGiaban.setText(Integer.toString(mt.getGiaban()));
        if (mt.getTrangthai().equals("Con")) {
            rdoCon.setSelected(true);
        } else {
            rdoHet.setSelected(true);
        }
        LoadDataCombobox(ql.getListadd());

    }

    public void LoadDataCombobox(ArrayList<Integer> data) {
        DefaultComboBoxModel cboModel = (DefaultComboBoxModel) cbonsx.getModel();
        cboModel.removeAllElements();
        for (Integer item : data) {
            cboModel.addElement(item);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package service;

import java.awt.List;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import model.MayTinh;

/**
 *
 * @author ADMIN
 */
public class QLMayTinh {

    ArrayList<MayTinh> dsmt = new ArrayList();

    ArrayList<Integer> listadd = new ArrayList();

    public ArrayList<MayTinh> getList() {
        return dsmt;
    }

    public QLMayTinh() {
        listadd.add(2000);
        listadd.add(2001);
       listadd.add(2002);
       listadd.add(2004);
       listadd.add(2005);
       listadd.add(2006);
       listadd.add(2007);
       
    }

    public void generateList() {
        dsmt.clear();
        String path = "output.txt";
        try {
            FileReader read = new FileReader(path);
            BufferedReader buffread = new BufferedReader(read);
            String line;
            while ((line = buffread.readLine()) != null) {
                String parts[] = line.split(",\\s*");
                int ma = Integer.parseInt(parts[0]);
                String ten = parts[1];
                String hang = parts[2];
                String trangthai = parts[3];
                int giaban = Integer.parseInt(parts[4]);
                MayTinh mt = new MayTinh(ma, ten, hang, trangthai, giaban);
                dsmt.add(mt);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    public ArrayList<MayTinh> readFile() {
        String path = "output.txt";
        ArrayList<MayTinh> list = new ArrayList();
        try {
            FileReader read = new FileReader(path);
            BufferedReader buffread = new BufferedReader(read);
            String line;
            while ((line = buffread.readLine()) != null) {
                String parts[] = line.split(",\\s*");
                int ma = Integer.parseInt(parts[0]);
                String ten = parts[1];
                String hang = parts[2];
                String trangthai = parts[3];
                int giaban = Integer.parseInt(parts[4]);
                MayTinh mt = new MayTinh(ma, ten, hang, trangthai, giaban);
                list.add(mt);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return list;
    }

    public ArrayList<Integer> getListadd() {
        return listadd;
    }

    public String add(MayTinh mt) {
        dsmt.add(mt);
        return "Them thanh cong";
    }

    public String upd(MayTinh mt, int index) {
        dsmt.set(index, mt);
        return "Cap nhat thanh cong";
    }

    public String del(int index) {
        dsmt.remove(index);
        return "Xoa thanh cong";
    }

    public ArrayList<MayTinh> search(String ten) {
        ArrayList<MayTinh> list = new ArrayList<>();
        for (MayTinh mayTinh : list) {
            if (mayTinh.getTen().equals(ten)) {
                list.add(mayTinh);
            }
        }
        return list;
    }
}

sout
    sout b
    return
    
}

a
